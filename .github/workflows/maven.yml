# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
# Checkout source code
    - uses: actions/checkout@v2

    - name: echo
      env:
        GH: ${{ tojson(github) }}
      run: echo "$GH"

      # Cache maven stuff
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

      # Cache docker images
    - uses: satackey/action-docker-layer-caching@v0.0.8
      name: Cache docker layers
      # Ignore the failure of a step and avoid terminating the job.
      continue-on-error: true

# Setup Java environment including maven
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 11

# Build solution. Also creates docker image.
    - name: Build with Maven
      run: mvn clean install

# Login to docker hub using secrets in GitHub.
    - name: Login to docker
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

# Tag image
    - name: Tag dev
      run: docker tag kvalitetsit/medcom-video-api:latest jonaspkit/video-api-test:dev

# Push to docker hub
    - name: Push to docker
      run: docker push jonaspkit/video-api-test:dev

  # If tag push tag to docker
    - name: Tag name
      id: tag
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

    - name: Pring tag
      if: ${{ steps.tag.outputs.VERSION != '' }}
      run: echo $${{ steps.tag.outputs.VERSION }}

  test:
    runs-on: ubuntu-latest
    steps:
      -  name: hej hej
         run: docker image ls

